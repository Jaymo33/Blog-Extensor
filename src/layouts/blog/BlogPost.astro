---
// @ts-nocheck
import { getCollection, type CollectionEntry } from 'astro:content';
import Layout from '../Layout.astro';

type Props = {
  post: CollectionEntry<'blog'>;
};

const { post } = Astro.props;
// Ensure required fields are present and provide defaults
const { 
  title = 'Untitled Post', 
  description = '', 
  pubDate = new Date(), 
  updatedDate, 
  heroImage, 
  tags = [], 
  author, 
  canonical,
  schema
} = post.data;

// Format date for display
const formattedPubDate = pubDate.toLocaleDateString('en-us', {
  year: 'numeric',
  month: 'long',
  day: 'numeric',
});

// Get related posts (for demo, we'll use the most recent posts)
const allPosts = (await getCollection('blog')).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);
const relatedPosts = allPosts.slice(0, 3);

// Generate the canonical URL
const canonicalURL = canonical || new URL(Astro.url.pathname, Astro.site).href;
---

<Layout currentTitle={title}>
  <!-- Removed the old breadcrumb navigation as it's replaced by SecondaryNav -->
  <div class="blog-container">
    <main class="blog-main">
      <article class="blog-post">
        
        {/* Post Header */}
        <header class="post-header">
         
          <div class="header-grid">
            <h1 class="post-title">{title}</h1>
            {heroImage && (
              <img
                src={heroImage}
                alt={title}
                width="300"
                height="300"
                class="header-image"
                loading="lazy"
              />
            )}
          </div>
        
         
         
        </header>

        {/* Post Content */}
        <div class="post-content">
          <slot />
        </div>

        {/* Post Footer */}
        
      </article>
    </main>

 
  </div>
</Layout>

<style>
  .blog-container {
    max-width: 1200px;
    margin: 0 auto;
    padding: 2rem 1rem;
    gap: 2rem;
  }

  .blog-main {
    /* max-width: 800px; */
    margin: 0 auto;
  }

  .featured-image {
    margin-bottom: 2rem;
    border-radius: 8px;
    overflow: hidden;
    box-shadow: 0 4px 6px rgba(0, 0, 0, 0.1);
  }

  .post-image {
    width: 100%;
    height: auto;
    display: block;
    transition: transform 0.3s ease;
  }

  .post-image:hover {
    transform: scale(1.02);
  }

  .post-header {
    margin-bottom: 2rem !important;
    width: 95%;
    margin: 0 auto;
  }

  .post-meta {
    color: #6b7280;
    font-size: 0.875rem;
    margin-bottom: 0.5rem;
  }

  .post-author {
    margin-left: 0.75rem;
    padding-left: 0.75rem;
    border-left: 1px solid #e5e7eb;
  }

  .post-title {
    font-size: 3.25rem;
    font-weight: 800;
    margin: 0.5rem 0 1rem;
    margin-top: 100px;
    color: #014E4E;
    line-height: 1.2;
  }

  .post-tags {
    display: flex;
    flex-wrap: wrap;
    gap: 0.5rem;
    margin-top: 1rem;
  }

  .tag {
    display: inline-block;
    background-color: #f3f4f6;
    color: #4b5563;
    padding: 0.25rem 0.75rem;
    border-radius: 9999px;
    font-size: 0.75rem;
    font-weight: 500;
    text-decoration: none;
    transition: all 0.2s;
  }

  .tag:hover {
    background-color: #e5e7eb;
    color: #1f2937;
  }

  .post-content {
    line-height: 1.6;
    color: #374151;
    font-size: 1rem;
    letter-spacing: -0.01em;
  }

  .post-content h2 {
    font-size: 1.5rem;
    margin: 2rem 0 1rem;
    font-weight: 600;
    letter-spacing: -0.0125em;
  }

  .post-content p {
    margin-bottom: 1.25rem;
  }

  .post-footer {
    margin-top: 3rem;
    padding-top: 2rem;
    border-top: 1px solid #e5e7eb;
  }

  .post-share {
    display: flex;
    align-items: center;
    margin-bottom: 1.5rem;
    font-weight: 500;
  }

  .social-share {
    display: flex;
    gap: 1rem;
    margin-left: 1rem;
  }

  .social-icon {
    color: #6b7280;
    transition: color 0.2s;
  }

  .social-icon:hover {
    color: #3b82f6;
  }

  .post-updated {
    color: #6b7280;
    font-size: 0.875rem;
  }

  /* Sidebar Styles */
  .blog-sidebar {
    position: sticky;
    top: 2rem;
    align-self: start;
  }

  .sidebar-section {
    background-color: #f9fafb;
    border-radius: 8px;
    padding: 1.5rem;
    margin-bottom: 2rem;
  }

  .sidebar-title {
    font-size: 1.25rem;
    font-weight: 700;
    margin-top: 0;
    margin-bottom: 1.25rem;
    color: #111827;
  }

  .related-posts {
    display: flex;
    flex-direction: column;
    gap: 1rem;
  }

  .related-post {
    display: flex;
    align-items: center;
    gap: 1rem;
    text-decoration: none;
    color: inherit;
    transition: background-color 0.2s;
    padding: 0.5rem;
    border-radius: 6px;
  }

  .related-post:hover {
    background-color: #f3f4f6;
  }

  .related-post-image {
    width: 80px;
    height: 60px;
    object-fit: cover;
    border-radius: 4px;
  }

  .related-post-content {
    flex: 1;
  }

  .related-post-title {
    font-size: 0.875rem;
    font-weight: 600;
    margin: 0 0 0.25rem;
    line-height: 1.3;
    color: #111827;
  }

  .related-post-date {
    font-size: 0.75rem;
    color: #6b7280;
  }

  .newsletter-form {
    display: flex;
    flex-direction: column;
    gap: 0.75rem;
  }

  .newsletter-form input {
    padding: 0.75rem 1rem;
    border: 1px solid #e5e7eb;
    border-radius: 6px;
    font-size: 0.875rem;
  }

  .newsletter-form button {
    background-color: #3b82f6;
    color: white;
    border: none;
    padding: 0.75rem 1rem;
    border-radius: 6px;
    font-weight: 600;
    cursor: pointer;
    transition: background-color 0.2s;
  }

  .newsletter-form button:hover {
    background-color: #2563eb;
  }

  @media (max-width: 1024px) {
    .blog-container {
      grid-template-columns: 1fr;
    }

    .blog-sidebar {
      position: static;
      margin-top: 3rem;
    }
  }
  /* Breadcrumb */
  .breadcrumb {
    font-size: 0.875rem;
    margin-bottom: 1.5rem;
    color: #6b7280;
  }
  .breadcrumb a {
    color: #6b7280;
    text-decoration: none;
  }
  .breadcrumb a:hover {
    text-decoration: underline;
  }
  .breadcrumb .sep {
    margin: 0 0.5rem;
  }
  .breadcrumb .current {
    color: #111827;
    font-weight: 600;
  }

  /* Header grid */
  .header-grid {
    display: grid;
    grid-template-columns: 1fr auto;
    align-items: start;
    gap: 2rem;
  }
  .header-image {
    min-width: 350px;
    border-radius: 25px;
    box-shadow: 0 4px 6px rgba(0,0,0,0.1);
  }

</style>

<!-- Schema.org JSON-LD -->
{schema && <script type="application/ld+json" set:html={JSON.stringify(schema)} />}