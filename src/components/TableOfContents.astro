---
export interface Props {
  title?: string;
}

const { title = "Jump to Section" } = Astro.props;
---

<nav class="table-of-contents" aria-labelledby="toc-heading" id="table-of-contents">
  <h2 id="toc-heading" class="toc-title">
    <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
      <line x1="4" y1="6" x2="20" y2="6"></line>
      <line x1="4" y1="12" x2="20" y2="12"></line>
      <line x1="4" y1="18" x2="20" y2="18"></line>
    </svg>
    {title}
  </h2>
  
  <ol class="toc-list" id="toc-list">
    <!-- TOC items will be generated by JavaScript -->
  </ol>
</nav>

<style>
  .table-of-contents {
    background: #FFF8ED;
    border: 1px solid #FFE4CC;
    border-radius: 6px;
    padding: 1.25rem;
    margin: 2rem 0;
    position: sticky;
    top: 1rem;
    max-height: 70vh;
    overflow-y: auto;
    box-shadow: 0 2px 4px rgba(0, 0, 0, 0.05);
  }

  .toc-title {
    display: flex;
    align-items: center;
    gap: 0.5rem;
    font-size: 1rem;
    font-weight: 600;
    color: #333;
    margin: 0 0 1rem 0;
    font-family: 'Open Sans', Arial, Helvetica, sans-serif;
  }

  .toc-title svg {
    color: #FF6B35;
    flex-shrink: 0;
  }

  .toc-list {
    list-style: none;
    padding: 0;
    margin: 0;
  }

  .toc-item {
    margin: 0.75rem 0;
    position: relative;
    display: flex;
    align-items: flex-start;
  }

  .toc-number {
    color: #FF6B35;
    font-weight: 600;
    font-size: 0.8rem;
    margin-right: 0.75rem;
    min-width: 1.5rem;
    display: inline-block;
    flex-shrink: 0;
    line-height: 1.3;
  }

  .toc-link {
    display: inline-block;
    color: #666;
    text-decoration: none;
    padding: 0.375rem 0.5rem;
    border-radius: 3px;
    transition: font-size 0.2s ease;
    font-size: 0.85rem;
    line-height: 1.3;
    flex: 1;
  }

  .toc-link:hover {
    color: #FF6B35;
    font-size: 0.9rem;
    font-weight: 500;
  }

  /* Indentation for different heading levels */
  .toc-level-1 { margin-left: 0; }
  .toc-level-2 { margin-left: 1rem; }
  .toc-level-3 { margin-left: 2rem; }
  .toc-level-4 { margin-left: 3rem; }
  .toc-level-5 { margin-left: 4rem; }
  .toc-level-6 { margin-left: 5rem; }

  /* Active section highlighting */
  .toc-link.active {
    color: #FF6B35;
    font-weight: 600;
    font-size: 0.9rem;
  }

  /* Scrollbar styling */
  .table-of-contents::-webkit-scrollbar {
    width: 6px;
  }

  .table-of-contents::-webkit-scrollbar-track {
    background: #f1f1f1;
    border-radius: 3px;
  }

  .table-of-contents::-webkit-scrollbar-thumb {
    background: #FF6B35;
    border-radius: 3px;
  }

  .table-of-contents::-webkit-scrollbar-thumb:hover {
    background: #e55a2b;
  }

  @media (max-width: 768px) {
    .table-of-contents {
      position: static;
      margin: 1.5rem 0;
      max-height: none;
      padding: 1rem;
    }
    
    .toc-item {
      margin: 0.5rem 0;
    }
    
    .toc-link {
      font-size: 0.8rem;
    }
    
    .toc-link:hover {
      font-size: 0.85rem;
    }
    
    .toc-level-3 { margin-left: 1.5rem; }
    .toc-level-4 { margin-left: 2rem; }
    .toc-level-5 { margin-left: 2.5rem; }
    .toc-level-6 { margin-left: 3rem; }
  }
</style>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const tocList = document.getElementById('toc-list');
    const tocContainer = document.getElementById('table-of-contents');
    const headings = document.querySelectorAll('.post-content h1, .post-content h2, .post-content h3, .post-content h4, .post-content h5, .post-content h6');
    
    if (!tocList || !tocContainer || headings.length === 0) {
      // Hide TOC if no headings found
      if (tocContainer) {
        tocContainer.style.display = 'none';
      }
      return;
    }

    // Generate TOC items
    function generateTOC() {
      tocList.innerHTML = '';
      
      headings.forEach((heading) => {
        // Generate ID if it doesn't exist
        if (!heading.id) {
          const text = heading.textContent || '';
          const id = text
            .toLowerCase()
            .replace(/[^\w\s-]/g, '') // Remove special characters
            .replace(/\s+/g, '-') // Replace spaces with hyphens
            .replace(/-+/g, '-') // Replace multiple hyphens with single
            .replace(/^-|-$/g, ''); // Remove leading/trailing hyphens
          
          heading.id = id;
        }

        // Create TOC item
        const level = parseInt(heading.tagName.charAt(1));
        const text = heading.textContent || '';
        const id = heading.id;
        const index = tocList.children.length + 1; // Manual numbering
        
        const li = document.createElement('li');
        li.className = `toc-item toc-level-${level}`;
        
        // Create number span
        const numberSpan = document.createElement('span');
        numberSpan.className = 'toc-number';
        numberSpan.textContent = `${index}.`;
        
        const link = document.createElement('a');
        link.href = `#${id}`;
        link.className = 'toc-link';
        link.setAttribute('data-heading-level', level.toString());
        link.setAttribute('data-heading-text', text);
        link.textContent = text;
        
        li.appendChild(numberSpan);
        li.appendChild(link);
        tocList.appendChild(li);
      });
    }

    // Generate the TOC
    generateTOC();

    // Get the generated TOC links
    const tocLinks = document.querySelectorAll('.toc-link');
    
    if (tocLinks.length === 0) return;

    // Smooth scroll for TOC links
    tocLinks.forEach(link => {
      link.addEventListener('click', function(e) {
        e.preventDefault();
        const targetId = this.getAttribute('href').substring(1);
        const targetElement = document.getElementById(targetId);
        
        if (targetElement) {
          // Track TOC click in analytics
          const headingText = this.getAttribute('data-heading-text');
          const headingLevel = this.getAttribute('data-heading-level');
          
          if (typeof gtag !== 'undefined') {
            gtag('event', 'toc_click', {
              heading_text: headingText,
              heading_level: headingLevel,
              event_category: 'navigation',
              event_label: 'table_of_contents'
            });
          }
          
          if (typeof abTesting !== 'undefined') {
            abTesting.trackEvent('toc_click', {
              heading_text: headingText,
              heading_level: headingLevel,
              timestamp: new Date().toISOString()
            });
          }
          
          // Smooth scroll to target
          targetElement.scrollIntoView({
            behavior: 'smooth',
            block: 'start'
          });
          
          // Update URL without page reload
          history.pushState(null, null, `#${targetId}`);
          
          console.log(`TOC clicked: ${headingText}`);
        }
      });
    });

    // Highlight active section based on scroll position
    function updateActiveTOCLink() {
      let current = '';
      
      headings.forEach(heading => {
        const rect = heading.getBoundingClientRect();
        if (rect.top <= 100) { // 100px offset from top
          current = heading.id;
        }
      });
      
      // Update active states
      tocLinks.forEach(link => {
        link.classList.remove('active');
        if (link.getAttribute('href') === `#${current}`) {
          link.classList.add('active');
        }
      });
    }

    // Update on scroll
    let ticking = false;
    function onScroll() {
      if (!ticking) {
        requestAnimationFrame(() => {
          updateActiveTOCLink();
          ticking = false;
        });
        ticking = true;
      }
    }

    window.addEventListener('scroll', onScroll);
    
    // Initial update
    updateActiveTOCLink();
  });
</script>
